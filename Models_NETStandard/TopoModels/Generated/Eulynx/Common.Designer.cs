// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 5.2.0.0. www.xsd2code.com
//    {"TargetFramework":"Net20","NameSpace":"Models.TopoModels.Eulynx","CollectionObjectType":"Array","CollectionBase":"","ExcludeImportedTypes":true,"Properties":{"LazyLoading":true,"PrivateFieldCustomPrefix":""},"XmlAttribute":{"Enabled":true,"GenerateOrderXmlAttributes":true},"ClassParams":{"GenerateInSeparateFilesDirectory":""},"Miscellaneous":{"EnableDebug":true,"EnableSummaryComment":true},"CustomUsings":[{"NameSpace":"Models.TopoModels.Eulynx.Common"},{"NameSpace":"Models.TopoModels.Eulynx.EULYNX_Signalling"},{"NameSpace":"Models.TopoModels.Eulynx.DB"},{"NameSpace":"Models.TopoModels.Eulynx.EULYNX_XSD"},{"NameSpace":"Models.TopoModels.Eulynx.NetEntity"},{"NameSpace":"Models.TopoModels.Eulynx.NR"},{"NameSpace":"Models.TopoModels.Eulynx.ProRail"},{"NameSpace":"Models.TopoModels.Eulynx.RFI"},{"NameSpace":"Models.TopoModels.Eulynx.Signalling"},{"NameSpace":"Models.TopoModels.Eulynx.SNCF"},{"NameSpace":"Models.TopoModels.Eulynx.TRV"}]}
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace Models.TopoModels.Eulynx.Common
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Runtime.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.Xml;
    
    
    /// <summary>
    /// The vertical alignment is composed of a set of ordered vertical alignment segments. Each  segment can be of one of the following three geometry types:
    /// <ul>
    /// <li>straight line</li>
    /// <li>arc of a circle</li>
    /// <li>transition curve</li>
    /// </ul>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("verticalAlignment", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class VerticalAlignment
    {
        #region Private fields
        private tElementWithIDref[] _isStructuredIn;
        #endregion
        
        [XmlElement("isStructuredIn", Order=0)]
        public tElementWithIDref[] isStructuredIn
        {
            get
            {
                return _isStructuredIn;
            }
            set
            {
                _isStructuredIn = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    public partial class tElementWithIDref
    {
        #region Private fields
        private string _ref;
        #endregion
        
        /// <summary>
        /// The XSD generator can be hard coded so that the ref attribute is restricted to the pattern (urn:uuid:)?[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|\{[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\}
        /// </summary>
        [XmlAttribute]
        public string @ref
        {
            get
            {
                return _ref;
            }
            set
            {
                _ref = value;
            }
        }
    }
    
    /// <summary>
    /// Defines a collection of NetElements that can aggregate into a higher level NetElement class.
    /// </summary>
    [XmlIncludeAttribute(typeof(UnorderedCollection))]
    [XmlIncludeAttribute(typeof(OrderedCollection))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("elementPartCollection", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class ElementPartCollection : BaseObject
    {
    }
    
    /// <summary>
    /// NetElements can be grouped in collections (class: ElementPartCollection) ; collections can be ordered (subclass: OrderedCollection) or not (subclass: UnorderedCollection). The nature of collections and the meaning of the "order" are left to the user.
    /// </summary>
    [XmlIncludeAttribute(typeof(NamedResource))]
    [XmlIncludeAttribute(typeof(TimeReferenceSystem))]
    [XmlIncludeAttribute(typeof(Unit))]
    [XmlIncludeAttribute(typeof(NetworkResource))]
    [XmlIncludeAttribute(typeof(Relation))]
    [XmlIncludeAttribute(typeof(PositionedRelation))]
    [XmlIncludeAttribute(typeof(NetElement))]
    [XmlIncludeAttribute(typeof(CompositionNetElement))]
    [XmlIncludeAttribute(typeof(PositioningNetElement))]
    [XmlIncludeAttribute(typeof(LinearElement))]
    [XmlIncludeAttribute(typeof(NonLinearElement))]
    [XmlIncludeAttribute(typeof(PositioningSystem))]
    [XmlIncludeAttribute(typeof(LinearPositioningSystem))]
    [XmlIncludeAttribute(typeof(GeometricPositioningSystem))]
    [XmlIncludeAttribute(typeof(QuantityKind))]
    [XmlIncludeAttribute(typeof(Circumstance))]
    [XmlIncludeAttribute(typeof(MeasurementAuthor))]
    [XmlIncludeAttribute(typeof(PhenomenonTime))]
    [XmlIncludeAttribute(typeof(MeasurementEquipment))]
    [XmlIncludeAttribute(typeof(Context))]
    [XmlIncludeAttribute(typeof(MeasurementMethod))]
    [XmlIncludeAttribute(typeof(BaseProperty))]
    [XmlIncludeAttribute(typeof(PropertySet))]
    [XmlIncludeAttribute(typeof(ObservableProperty))]
    [XmlIncludeAttribute(typeof(PositioningSystemCoordinate))]
    [XmlIncludeAttribute(typeof(LinearCoordinate))]
    [XmlIncludeAttribute(typeof(GeometricCoordinate))]
    [XmlIncludeAttribute(typeof(CartesianCoordinate))]
    [XmlIncludeAttribute(typeof(GeographicCoordinate))]
    [XmlIncludeAttribute(typeof(Sensor))]
    [XmlIncludeAttribute(typeof(Network))]
    [XmlIncludeAttribute(typeof(InformationSource))]
    [XmlIncludeAttribute(typeof(Observation))]
    [XmlIncludeAttribute(typeof(Specification))]
    [XmlIncludeAttribute(typeof(ThreeDAlignmentCurve))]
    [XmlIncludeAttribute(typeof(HorizontalAlignmentSegment))]
    [XmlIncludeAttribute(typeof(HorizontalSegmentLine))]
    [XmlIncludeAttribute(typeof(HorizontalSegmentTransition))]
    [XmlIncludeAttribute(typeof(HorizontalSegmentArc))]
    [XmlIncludeAttribute(typeof(DiscretisedPointSet))]
    [XmlIncludeAttribute(typeof(AlignmentCantSegment))]
    [XmlIncludeAttribute(typeof(SegmentCantTransition))]
    [XmlIncludeAttribute(typeof(SegmentCantLine))]
    [XmlIncludeAttribute(typeof(LinearAnchorPoint))]
    [XmlIncludeAttribute(typeof(VerticalAlignmentSegment))]
    [XmlIncludeAttribute(typeof(VerticalSegmentLine))]
    [XmlIncludeAttribute(typeof(VerticalSegmentArc))]
    [XmlIncludeAttribute(typeof(VerticalSegmentTransition))]
    [XmlIncludeAttribute(typeof(AlignmentCurve))]
    [XmlIncludeAttribute(typeof(AssociatedPositioningSystem))]
    [XmlIncludeAttribute(typeof(BaseLocation))]
    [XmlIncludeAttribute(typeof(AreaLocation))]
    [XmlIncludeAttribute(typeof(TimedLocation))]
    [XmlIncludeAttribute(typeof(SpotLocation))]
    [XmlIncludeAttribute(typeof(SpotLocationIntrinsic))]
    [XmlIncludeAttribute(typeof(SpotLocationCoordinate))]
    [XmlIncludeAttribute(typeof(LinearLocation))]
    [XmlIncludeAttribute(typeof(LinearLocationCoordinate))]
    [XmlIncludeAttribute(typeof(NetworkLevel))]
    [XmlIncludeAttribute(typeof(IntrinsicCoordinate))]
    [XmlIncludeAttribute(typeof(ElementPartCollection))]
    [XmlIncludeAttribute(typeof(UnorderedCollection))]
    [XmlIncludeAttribute(typeof(OrderedCollection))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("baseObject", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public abstract partial class BaseObject
    {
        #region Private fields
        private string _uuid;
        #endregion
        
        /// <summary>
        /// The XSD generator can be hard coded so that the uuid attribute is restricted to the pattern (urn:uuid:)?[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|\{[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\}
        /// </summary>
        [XmlAttribute]
        public string uuid
        {
            get
            {
                return _uuid;
            }
            set
            {
                _uuid = value;
            }
        }
    }
    
    /// <summary>
    /// A resource that has a name.
    /// </summary>
    [XmlIncludeAttribute(typeof(TimeReferenceSystem))]
    [XmlIncludeAttribute(typeof(Unit))]
    [XmlIncludeAttribute(typeof(NetworkResource))]
    [XmlIncludeAttribute(typeof(Relation))]
    [XmlIncludeAttribute(typeof(PositionedRelation))]
    [XmlIncludeAttribute(typeof(NetElement))]
    [XmlIncludeAttribute(typeof(CompositionNetElement))]
    [XmlIncludeAttribute(typeof(PositioningNetElement))]
    [XmlIncludeAttribute(typeof(LinearElement))]
    [XmlIncludeAttribute(typeof(NonLinearElement))]
    [XmlIncludeAttribute(typeof(PositioningSystem))]
    [XmlIncludeAttribute(typeof(LinearPositioningSystem))]
    [XmlIncludeAttribute(typeof(GeometricPositioningSystem))]
    [XmlIncludeAttribute(typeof(QuantityKind))]
    [XmlIncludeAttribute(typeof(Circumstance))]
    [XmlIncludeAttribute(typeof(MeasurementAuthor))]
    [XmlIncludeAttribute(typeof(PhenomenonTime))]
    [XmlIncludeAttribute(typeof(MeasurementEquipment))]
    [XmlIncludeAttribute(typeof(Context))]
    [XmlIncludeAttribute(typeof(MeasurementMethod))]
    [XmlIncludeAttribute(typeof(BaseProperty))]
    [XmlIncludeAttribute(typeof(PropertySet))]
    [XmlIncludeAttribute(typeof(ObservableProperty))]
    [XmlIncludeAttribute(typeof(PositioningSystemCoordinate))]
    [XmlIncludeAttribute(typeof(LinearCoordinate))]
    [XmlIncludeAttribute(typeof(GeometricCoordinate))]
    [XmlIncludeAttribute(typeof(CartesianCoordinate))]
    [XmlIncludeAttribute(typeof(GeographicCoordinate))]
    [XmlIncludeAttribute(typeof(Sensor))]
    [XmlIncludeAttribute(typeof(Network))]
    [XmlIncludeAttribute(typeof(InformationSource))]
    [XmlIncludeAttribute(typeof(Observation))]
    [XmlIncludeAttribute(typeof(Specification))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("namedResource", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public abstract partial class NamedResource : BaseObject
    {
        #region Private fields
        private string _longname;
        private string _name;
        #endregion
        
        /// <summary>
        /// Long name of the resource.
        /// </summary>
        [XmlAttribute]
        public string longname
        {
            get
            {
                return _longname;
            }
            set
            {
                _longname = value;
            }
        }
        
        /// <summary>
        /// Natural designation of the object.
        /// </summary>
        [XmlAttribute]
        public string name
        {
            get
            {
                return _name;
            }
            set
            {
                _name = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("timeReferenceSystem", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class TimeReferenceSystem : NamedResource
    {
    }
    
    /// <summary>
    /// Derived from OMG SysML 1.2 : see <a href="http://www.omgwiki.org/OMGSysML/lib/exe/fetch.php?media=sysml-qudv:annex_c.5_2009-08-26.pdf"><font color="#0000ff"><u>http://www.omgwiki.org/OMGSysML/lib/exe/fetch.php?media=sysml-qudv:annex_c.5_2009-08-26.pdf</u></font></a> , figure C8.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("unit", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class Unit : NamedResource
    {
        #region Private fields
        private string _definitionURI;
        private string _symbol;
        #endregion
        
        [XmlElement(Order=0)]
        public string definitionURI
        {
            get
            {
                return _definitionURI;
            }
            set
            {
                _definitionURI = value;
            }
        }
        
        [XmlAttribute]
        public string symbol
        {
            get
            {
                return _symbol;
            }
            set
            {
                _symbol = value;
            }
        }
    }
    
    /// <summary>
    /// Every object of the network is qualified as a resource.
    /// </summary>
    [XmlIncludeAttribute(typeof(Relation))]
    [XmlIncludeAttribute(typeof(PositionedRelation))]
    [XmlIncludeAttribute(typeof(NetElement))]
    [XmlIncludeAttribute(typeof(CompositionNetElement))]
    [XmlIncludeAttribute(typeof(PositioningNetElement))]
    [XmlIncludeAttribute(typeof(LinearElement))]
    [XmlIncludeAttribute(typeof(NonLinearElement))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("networkResource", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public abstract partial class NetworkResource : NamedResource
    {
    }
    
    /// <summary>
    /// Base class for defining edges in the sense of graph theory.
    /// </summary>
    [XmlIncludeAttribute(typeof(PositionedRelation))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("relation", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class Relation : NetworkResource
    {
    }
    
    /// <summary>
    /// The positioned relation defines an oriented relation between exactly two PositioningNetElements.
    /// An instance of this class is equivalent to an edge in a connectivity graph
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("positionedRelation", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class PositionedRelation : Relation
    {
        #region Private fields
        private tElementWithIDref _elementA;
        private tElementWithIDref _elementB;
        private Navigability _navigability;
        private Usage _positionOnA;
        private Usage _positionOnB;
        #endregion
        
        /// <summary>
        /// Connects to PositioningNetElement 'A'
        /// </summary>
        [XmlElement(Order=0)]
        public tElementWithIDref elementA
        {
            get
            {
                if ((_elementA == null))
                {
                    _elementA = new tElementWithIDref();
                }
                return _elementA;
            }
            set
            {
                _elementA = value;
            }
        }
        
        /// <summary>
        /// Connects to PositioningNetElement 'B'
        /// </summary>
        [XmlElement(Order=1)]
        public tElementWithIDref elementB
        {
            get
            {
                if ((_elementB == null))
                {
                    _elementB = new tElementWithIDref();
                }
                return _elementB;
            }
            set
            {
                _elementB = value;
            }
        }
        
        /// <summary>
        /// Indicates the direction of possible train travel between A and B.
        /// </summary>
        [XmlElement(Order=2)]
        public Navigability navigability
        {
            get
            {
                return _navigability;
            }
            set
            {
                _navigability = value;
            }
        }
        
        /// <summary>
        /// The relation is with the start or end of NetElement A.
        /// </summary>
        [XmlElement(Order=3)]
        public Usage positionOnA
        {
            get
            {
                return _positionOnA;
            }
            set
            {
                _positionOnA = value;
            }
        }
        
        /// <summary>
        /// The relation is with the start or end of NetElement B.
        /// </summary>
        [XmlElement(Order=4)]
        public Usage positionOnB
        {
            get
            {
                return _positionOnB;
            }
            set
            {
                _positionOnB = value;
            }
        }
    }
    
    /// <summary>
    /// The possible values for Navigability allow the graph to be oriented. "Both" is the generally valid value for railways.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    public enum Navigability
    {
        /// <summary>
        /// Navigation is possible only from NetElement A to NetElement B.
        /// </summary>
        AB,
        /// <summary>
        /// Navigation is possible only from NetElement B to NetElement A.
        /// </summary>
        BA,
        /// <summary>
        /// Navigation between element A and B is possible in both directions.
        /// </summary>
        Both,
        /// <summary>
        /// None is an extraneous value - a graph would have no edge at all in such case. It conveys the meaning that NetElements are "adjacent", which makes no sense in graph theory but would have a meaning in mathematical topology (you cannot insert any NetElement between). This is a slight but practical concession to conceptual purity.
        /// 
        /// To keep the real connectivity we need all the edges and the "none" value, else the connectivity graph (same for the line graph) is not properly formed with regard to the original graph.
        /// </summary>
        None,
    }
    
    /// <summary>
    /// States whether the relation connecting two NetElements is positioned at the start or end.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    public enum Usage
    {
        /// <summary>
        /// the relation uses the start of the net element
        /// </summary>
        start,
        /// <summary>
        /// the relation uses the end of the net element
        /// </summary>
        end,
    }
    
    /// <summary>
    /// The base member of topology in a connectivity graph representing the network (at any level).
    /// An NetElement has relations with one or more other NetElements.
    /// </summary>
    [XmlIncludeAttribute(typeof(CompositionNetElement))]
    [XmlIncludeAttribute(typeof(PositioningNetElement))]
    [XmlIncludeAttribute(typeof(LinearElement))]
    [XmlIncludeAttribute(typeof(NonLinearElement))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("netElement", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class NetElement : NetworkResource
    {
        #region Private fields
        private tElementWithIDref[] _relation;
        #endregion
        
        /// <summary>
        /// Reference to topological relations.
        /// </summary>
        [XmlElement("relation", Order=0)]
        public tElementWithIDref[] relation
        {
            get
            {
                return _relation;
            }
            set
            {
                _relation = value;
            }
        }
    }
    
    /// <summary>
    /// Allows the nodes to aggregate into bigger nodes. This allows zooming in and out, showing or hiding levels of detail.
    /// </summary>
    [XmlIncludeAttribute(typeof(PositioningNetElement))]
    [XmlIncludeAttribute(typeof(LinearElement))]
    [XmlIncludeAttribute(typeof(NonLinearElement))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("compositionNetElement", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public abstract partial class CompositionNetElement : NetElement
    {
        #region Private fields
        private ElementPartCollection[] _elementCollections;
        #endregion
        
        [XmlElement("elementCollections", Order=0)]
        public ElementPartCollection[] elementCollections
        {
            get
            {
                return _elementCollections;
            }
            set
            {
                _elementCollections = value;
            }
        }
    }
    
    /// <summary>
    /// Topological element in the network that requires at least one positioning system and an orientation, carried by the intrinsic coordinate.
    /// A concrete class, reflecting the fact that the "linear" or "non-linear" character of a given part of the network may depend on the context: at micro level, there is no ambiguity, but ambiguities may well arise at macro level for instance.
    /// </summary>
    [XmlIncludeAttribute(typeof(LinearElement))]
    [XmlIncludeAttribute(typeof(NonLinearElement))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("positioningNetElement", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class PositioningNetElement : CompositionNetElement
    {
        #region Private fields
        private AssociatedPositioningSystem[] _associatedPositioningSystems;
        #endregion
        
        /// <summary>
        /// Has coordinates in a given positioning system.
        /// </summary>
        [XmlElement("associatedPositioningSystems", Order=0)]
        public AssociatedPositioningSystem[] associatedPositioningSystems
        {
            get
            {
                return _associatedPositioningSystems;
            }
            set
            {
                _associatedPositioningSystems = value;
            }
        }
    }
    
    /// <summary>
    /// Describes the relation between a PositioningNetElement and a PositioningSystem
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("associatedPositioningSystem", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class AssociatedPositioningSystem : BaseObject
    {
        #region Private fields
        private IntrinsicCoordinate[] _intrinsicCoordinates;
        private tElementWithIDref _positioningSystem;
        #endregion
        
        [XmlElement("intrinsicCoordinates", Order=0)]
        public IntrinsicCoordinate[] intrinsicCoordinates
        {
            get
            {
                return _intrinsicCoordinates;
            }
            set
            {
                _intrinsicCoordinates = value;
            }
        }
        
        [XmlElement(Order=1)]
        public tElementWithIDref positioningSystem
        {
            get
            {
                if ((_positioningSystem == null))
                {
                    _positioningSystem = new tElementWithIDref();
                }
                return _positioningSystem;
            }
            set
            {
                _positioningSystem = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("intrinsicCoordinate", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class IntrinsicCoordinate : BaseObject
    {
        #region Private fields
        private tElementWithIDref[] _coordinates;
        private double _intrinsicCoord;
        #endregion
        
        /// <summary>
        /// Reference to coordinate(s) in a given coordinate reference system.
        /// </summary>
        [XmlElement("coordinates", Order=0)]
        public tElementWithIDref[] coordinates
        {
            get
            {
                return _coordinates;
            }
            set
            {
                _coordinates = value;
            }
        }
        
        [XmlAttribute]
        public double intrinsicCoord
        {
            get
            {
                return _intrinsicCoord;
            }
            set
            {
                _intrinsicCoord = value;
            }
        }
    }
    
    /// <summary>
    /// A one-dimensional topological (curvi-)linear element.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("linearElement", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class LinearElement : PositioningNetElement
    {
    }
    
    /// <summary>
    /// A topological element that isn't (curvi-)linear, i.e. area or point.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("nonLinearElement", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class NonLinearElement : PositioningNetElement
    {
    }
    
    /// <summary>
    /// A spatial reference system in which a position can be expressed in terms of coordinates.
    /// </summary>
    [XmlIncludeAttribute(typeof(LinearPositioningSystem))]
    [XmlIncludeAttribute(typeof(GeometricPositioningSystem))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("positioningSystem", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class PositioningSystem : NamedResource
    {
    }
    
    /// <summary>
    /// Defines a Positioning System where a line of reference, in combination with a single number allows locating within a railway network.
    /// The start- and end-measure represent the length of this line of reference and use the same units, e.g. 0.0 m to 422.8 m or 3.3 furlong to 34.2 furlong.
    /// The units of linear abscissa use the same unit as the start and end-measure.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("linearPositioningSystem", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class LinearPositioningSystem : PositioningSystem
    {
        #region Private fields
        private LinearAnchorPoint[] _anchors;
        private Length _endMeasure;
        private LrsMethod _hasLinearReferencingMethod;
        private Length _startMeasure;
        #endregion
        
        [XmlElement("anchors", Order=0)]
        public LinearAnchorPoint[] anchors
        {
            get
            {
                return _anchors;
            }
            set
            {
                _anchors = value;
            }
        }
        
        /// <summary>
        /// the highest abscissa in this system.
        /// </summary>
        [XmlElement(Order=1)]
        public Length endMeasure
        {
            get
            {
                if ((_endMeasure == null))
                {
                    _endMeasure = new Length();
                }
                return _endMeasure;
            }
            set
            {
                _endMeasure = value;
            }
        }
        
        [XmlElement(Order=2)]
        public LrsMethod hasLinearReferencingMethod
        {
            get
            {
                return _hasLinearReferencingMethod;
            }
            set
            {
                _hasLinearReferencingMethod = value;
            }
        }
        
        /// <summary>
        /// The lowest value of the abscissa in this system.
        /// </summary>
        [XmlElement(Order=3)]
        public Length startMeasure
        {
            get
            {
                if ((_startMeasure == null))
                {
                    _startMeasure = new Length();
                }
                return _startMeasure;
            }
            set
            {
                _startMeasure = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("linearAnchorPoint", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class LinearAnchorPoint : BaseObject
    {
        #region Private fields
        private string _anchorName;
        private double _measure;
        private double _measureToNext;
        #endregion
        
        [XmlElement(Order=0)]
        public string anchorName
        {
            get
            {
                return _anchorName;
            }
            set
            {
                _anchorName = value;
            }
        }
        
        [XmlAttribute]
        public double measure
        {
            get
            {
                return _measure;
            }
            set
            {
                _measure = value;
            }
        }
        
        [XmlAttribute]
        public double measureToNext
        {
            get
            {
                return _measureToNext;
            }
            set
            {
                _measureToNext = value;
            }
        }
    }
    
    /// <summary>
    /// Quantity of kind length, distance, height, width, etc.
    /// The quantity kind must be a Length.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("length", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class Length : Quantity
    {
    }
    
    /// <summary>
    /// Allows quantification of Properties, as well as for other purposes (e.g. observation and samples).
    /// </summary>
    [XmlIncludeAttribute(typeof(Speed))]
    [XmlIncludeAttribute(typeof(Mass))]
    [XmlIncludeAttribute(typeof(Duration))]
    [XmlIncludeAttribute(typeof(TimeValue))]
    [XmlIncludeAttribute(typeof(Result))]
    [XmlIncludeAttribute(typeof(Inertia))]
    [XmlIncludeAttribute(typeof(Length))]
    [XmlIncludeAttribute(typeof(Gradient))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("quantity", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public abstract partial class Quantity
    {
        #region Private fields
        private tElementWithIDref _quantityKind;
        private tElementWithIDref _unit;
        private double _value;
        #endregion
        
        [XmlElement(Order=0)]
        public tElementWithIDref quantityKind
        {
            get
            {
                if ((_quantityKind == null))
                {
                    _quantityKind = new tElementWithIDref();
                }
                return _quantityKind;
            }
            set
            {
                _quantityKind = value;
            }
        }
        
        [XmlElement(Order=1)]
        public tElementWithIDref unit
        {
            get
            {
                if ((_unit == null))
                {
                    _unit = new tElementWithIDref();
                }
                return _unit;
            }
            set
            {
                _unit = value;
            }
        }
        
        [XmlAttribute]
        public double value
        {
            get
            {
                return _value;
            }
            set
            {
                _value = value;
            }
        }
    }
    
    /// <summary>
    /// Quantity of kind speed.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("speed", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class Speed : Quantity
    {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("mass", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class Mass : Quantity
    {
    }
    
    /// <summary>
    /// Quantity of kind duration, delay, timer, etc.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("duration", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class Duration : Quantity
    {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("timeValue", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class TimeValue : Quantity
    {
        #region Private fields
        private tElementWithIDref[] _timeReferenceSystem;
        #endregion
        
        [XmlElement("timeReferenceSystem", Order=0)]
        public tElementWithIDref[] timeReferenceSystem
        {
            get
            {
                return _timeReferenceSystem;
            }
            set
            {
                _timeReferenceSystem = value;
            }
        }
    }
    
    /// <summary>
    /// "Result" as per w3c sosa ontology:
    /// <a href="https://www.w3.org/TR/vocab-ssn/#SOSAResult"><font color="#0000ff"><u>https://www.w3.org/TR/vocab-ssn/#SOSAResult</u></font></a>
    /// There is no apparent need for an ancestor class, as the result is "borne" by the observation that produces it. W3C does <b>not </b>indicate any ancestor (other than "Class") or properties, such as units, confidence ranges, etc.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("result", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class Result : Quantity
    {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("inertia", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class Inertia : Quantity
    {
    }
    
    /// <summary>
    /// Quantity of kind gradient, slope, ramp, etc.
    /// Uphill is positive, downhill is negative.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("gradient", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class Gradient : Quantity
    {
    }
    
    /// <summary>
    /// LrsMethod values refer to ISO 19148 definitions.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    public enum LrsMethod
    {
        /// <summary>
        /// distance along, measured from the intersections (junctions) where linear elements meet.
        /// </summary>
        relative,
        /// <summary>
        /// curvilinear abscissa ("distance along" linear element); values do not necessarily start with zero
        /// </summary>
        absolute,
        /// <summary>
        /// Fraction (percentage) of distance along linear element.
        /// </summary>
        interpolation,
    }
    
    /// <summary>
    /// Defines schematic, geographic or geodetic coordinate reference systems (CRS) used to position instances of NetElement or NetEntity. GeometricPositioningSystem instances support the transformation between intrinsic locations and geometric coordinates.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("geometricPositioningSystem", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class GeometricPositioningSystem : PositioningSystem
    {
        #region Private fields
        private string _crsDefinition;
        #endregion
        
        /// <summary>
        /// Name of the Coordinate reference System, e.g. WGS-84 for GPS coordinates or national CRS such as Lambert-93 (France), RD (Netherlands).
        /// Informs about the units in which the coordinates are expressed, usually kilometres or metres.
        /// </summary>
        [XmlAttribute]
        public string crsDefinition
        {
            get
            {
                return _crsDefinition;
            }
            set
            {
                _crsDefinition = value;
            }
        }
    }
    
    /// <summary>
    /// A Quantity of a given QuantityKind contains a numerical value expressed in a particular measurement unit.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("quantityKind", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class QuantityKind : NamedResource
    {
        #region Private fields
        private Scale _scale;
        private string _definitionURI;
        private string _symbol;
        #endregion
        
        [XmlElement(Order=0)]
        public Scale scale
        {
            get
            {
                if ((_scale == null))
                {
                    _scale = new Scale();
                }
                return _scale;
            }
            set
            {
                _scale = value;
            }
        }
        
        [XmlAttribute]
        public string definitionURI
        {
            get
            {
                return _definitionURI;
            }
            set
            {
                _definitionURI = value;
            }
        }
        
        [XmlAttribute]
        public string symbol
        {
            get
            {
                return _symbol;
            }
            set
            {
                _symbol = value;
            }
        }
    }
    
    /// <summary>
    /// For measuring a quantity on a scale such as Celsius, Kelvin, Beaufort, Richter.
    /// A measurement scale is an ordered set of quantity values of quantities of a given kind of quantity used in ranking, according to magnitude, quantities of that kind.
    /// A scale may need a unit such as "degree".
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("scale", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class Scale
    {
        #region Private fields
        private tElementWithIDref _unit;
        private ScaleValueDefinition[] _valueDefinition;
        #endregion
        
        [XmlElement(Order=0)]
        public tElementWithIDref unit
        {
            get
            {
                if ((_unit == null))
                {
                    _unit = new tElementWithIDref();
                }
                return _unit;
            }
            set
            {
                _unit = value;
            }
        }
        
        [XmlElement("valueDefinition", Order=1)]
        public ScaleValueDefinition[] valueDefinition
        {
            get
            {
                return _valueDefinition;
            }
            set
            {
                _valueDefinition = value;
            }
        }
    }
    
    /// <summary>
    /// Derived from OMG SysML 1.2 : see <a href="http://www.omgwiki.org/OMGSysML/lib/exe/fetch.php?media=sysml-qudv:annex_c.5_2009-08-26.pdf"><font color="#0000ff"><u>http://www.omgwiki.org/OMGSysML/lib/exe/fetch.php?media=sysml-qudv:annex_c.5_2009-08-26.pdf</u></font></a> , figure C8.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("scaleValueDefinition", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class ScaleValueDefinition
    {
        #region Private fields
        private string _description;
        private double _value;
        #endregion
        
        [XmlAttribute]
        public string description
        {
            get
            {
                return _description;
            }
            set
            {
                _description = value;
            }
        }
        
        [XmlAttribute]
        public double value
        {
            get
            {
                return _value;
            }
            set
            {
                _value = value;
            }
        }
    }
    
    /// <summary>
    /// Abstract class for a number of w3c sosa or ssn concepts in relation with observations. See examples.
    /// </summary>
    [XmlIncludeAttribute(typeof(MeasurementAuthor))]
    [XmlIncludeAttribute(typeof(PhenomenonTime))]
    [XmlIncludeAttribute(typeof(MeasurementEquipment))]
    [XmlIncludeAttribute(typeof(Context))]
    [XmlIncludeAttribute(typeof(MeasurementMethod))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("circumstance", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public abstract partial class Circumstance : NamedResource
    {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("measurementAuthor", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public abstract partial class MeasurementAuthor : Circumstance
    {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("phenomenonTime", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public abstract partial class PhenomenonTime : Circumstance
    {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("measurementEquipment", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public abstract partial class MeasurementEquipment : Circumstance
    {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("context", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public abstract partial class Context : Circumstance
    {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("measurementMethod", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public abstract partial class MeasurementMethod : Circumstance
    {
    }
    
    /// <summary>
    /// Abstract property class, needed to put the composite pattern at work.
    /// </summary>
    [XmlIncludeAttribute(typeof(PropertySet))]
    [XmlIncludeAttribute(typeof(ObservableProperty))]
    [XmlIncludeAttribute(typeof(PositioningSystemCoordinate))]
    [XmlIncludeAttribute(typeof(LinearCoordinate))]
    [XmlIncludeAttribute(typeof(GeometricCoordinate))]
    [XmlIncludeAttribute(typeof(CartesianCoordinate))]
    [XmlIncludeAttribute(typeof(GeographicCoordinate))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("baseProperty", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public abstract partial class BaseProperty : NamedResource
    {
        #region Private fields
        private tElementWithIDref[] _appliesTo;
        #endregion
        
        [XmlElement("appliesTo", Order=0)]
        public tElementWithIDref[] appliesTo
        {
            get
            {
                return _appliesTo;
            }
            set
            {
                _appliesTo = value;
            }
        }
    }
    
    /// <summary>
    /// Group of properties. Intended grouping is "mechanical properties", "actual state", or the like, rather than sampled values of the same properties (observations and value sampling are the concerns of another package).
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("propertySet", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class PropertySet : BaseProperty
    {
        #region Private fields
        private tElementWithIDref[] _contains;
        #endregion
        
        [XmlElement("contains", Order=0)]
        public tElementWithIDref[] contains
        {
            get
            {
                return _contains;
            }
            set
            {
                _contains = value;
            }
        }
    }
    
    /// <summary>
    /// Definition: see <a href="https://www.w3.org/TR/vocab-ssn/#SOSAObservableProperty"><font color="#0000ff"><u>https://www.w3.org/TR/vocab-ssn/#SOSAObservableProperty</u></font></a> .
    /// This class embodies all properties that need to be referenced by another class in this model (or a model using the present model). While platform-specific code may reference any public attribute or property, UML2.5 (used here to build a platform-independent model) does not allow a class to reference directly an attribute of another class, even if it is public.
    /// </summary>
    [XmlIncludeAttribute(typeof(PositioningSystemCoordinate))]
    [XmlIncludeAttribute(typeof(LinearCoordinate))]
    [XmlIncludeAttribute(typeof(GeometricCoordinate))]
    [XmlIncludeAttribute(typeof(CartesianCoordinate))]
    [XmlIncludeAttribute(typeof(GeographicCoordinate))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("observableProperty", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class ObservableProperty : BaseProperty
    {
        #region Private fields
        private Quantity[] _quantity;
        #endregion
        
        [XmlElement("quantity", Order=0)]
        public Quantity[] quantity
        {
            get
            {
                return _quantity;
            }
            set
            {
                _quantity = value;
            }
        }
    }
    
    [XmlIncludeAttribute(typeof(LinearCoordinate))]
    [XmlIncludeAttribute(typeof(GeometricCoordinate))]
    [XmlIncludeAttribute(typeof(CartesianCoordinate))]
    [XmlIncludeAttribute(typeof(GeographicCoordinate))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("positioningSystemCoordinate", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class PositioningSystemCoordinate : ObservableProperty
    {
        #region Private fields
        private tElementWithIDref _positioningSystem;
        #endregion
        
        /// <summary>
        /// Refers to coordinate reference system.
        /// </summary>
        [XmlElement(Order=0)]
        public tElementWithIDref positioningSystem
        {
            get
            {
                if ((_positioningSystem == null))
                {
                    _positioningSystem = new tElementWithIDref();
                }
                return _positioningSystem;
            }
            set
            {
                _positioningSystem = value;
            }
        }
    }
    
    /// <summary>
    /// A curvilinear abscissa, optional vertical and lateral offset.
    /// The units are defined by the associated positioning system.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("linearCoordinate", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class LinearCoordinate : PositioningSystemCoordinate
    {
        #region Private fields
        private Length _lateralOffset;
        private double _measure;
        private Length _verticalOffset;
        #endregion
        
        /// <summary>
        /// lateral offset. The sign is always positive and the side, left or right, is given by the spot location's lateral side.
        /// </summary>
        [XmlElement(Order=0)]
        public Length lateralOffset
        {
            get
            {
                if ((_lateralOffset == null))
                {
                    _lateralOffset = new Length();
                }
                return _lateralOffset;
            }
            set
            {
                _lateralOffset = value;
            }
        }
        
        /// <summary>
        /// A curvilinear abscissa, optional vertical and lateral offset.
        /// The units are defined by the associated positioning system.
        /// </summary>
        [XmlElement(Order=1)]
        public double measure
        {
            get
            {
                return _measure;
            }
            set
            {
                _measure = value;
            }
        }
        
        /// <summary>
        /// Vertical offset. Can be positive or negative.
        /// </summary>
        [XmlElement(Order=2)]
        public Length verticalOffset
        {
            get
            {
                if ((_verticalOffset == null))
                {
                    _verticalOffset = new Length();
                }
                return _verticalOffset;
            }
            set
            {
                _verticalOffset = value;
            }
        }
    }
    
    [XmlIncludeAttribute(typeof(CartesianCoordinate))]
    [XmlIncludeAttribute(typeof(GeographicCoordinate))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("geometricCoordinate", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public abstract partial class GeometricCoordinate : PositioningSystemCoordinate
    {
    }
    
    /// <summary>
    /// Cartesian coordinates. The x,y, z units are defined by the associated positioning system.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("cartesianCoordinate", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class CartesianCoordinate : GeometricCoordinate
    {
        #region Private fields
        private double _z;
        private double _x;
        private double _y;
        #endregion
        
        [XmlElement(Order=0)]
        public double z
        {
            get
            {
                return _z;
            }
            set
            {
                _z = value;
            }
        }
        
        [XmlAttribute]
        public double x
        {
            get
            {
                return _x;
            }
            set
            {
                _x = value;
            }
        }
        
        [XmlAttribute]
        public double y
        {
            get
            {
                return _y;
            }
            set
            {
                _y = value;
            }
        }
    }
    
    /// <summary>
    /// Lattitude, longitude and height. the datum and units are defined by the assocatied positioning system.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("geographicCoordinate", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class GeographicCoordinate : GeometricCoordinate
    {
        #region Private fields
        private double _height;
        private double _latitude;
        private double _longitude;
        #endregion
        
        [XmlElement(Order=0)]
        public double height
        {
            get
            {
                return _height;
            }
            set
            {
                _height = value;
            }
        }
        
        [XmlAttribute]
        public double latitude
        {
            get
            {
                return _latitude;
            }
            set
            {
                _latitude = value;
            }
        }
        
        [XmlAttribute]
        public double longitude
        {
            get
            {
                return _longitude;
            }
            set
            {
                _longitude = value;
            }
        }
    }
    
    /// <summary>
    /// A device that measures a physical feature of an object resulting in one or more observations.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("sensor", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class Sensor : NamedResource
    {
        #region Private fields
        private BaseLocation[] _isLocatedAt;
        #endregion
        
        /// <summary>
        /// The sensor's location.
        /// </summary>
        [XmlElement("isLocatedAt", Order=0)]
        public BaseLocation[] isLocatedAt
        {
            get
            {
                return _isLocatedAt;
            }
            set
            {
                _isLocatedAt = value;
            }
        }
    }
    
    /// <summary>
    /// Provides topological and position information "Location" is an abstraction for "some place in space that is <b>used </b>by some NetEntity". We can relate the location to network topology elements, and associate it with positions in some reference system.
    /// BaseLocation, as an abstract class, is the ancestor of actually usable locations (spot, linear, or area).
    /// </summary>
    [XmlIncludeAttribute(typeof(AreaLocation))]
    [XmlIncludeAttribute(typeof(TimedLocation))]
    [XmlIncludeAttribute(typeof(SpotLocation))]
    [XmlIncludeAttribute(typeof(SpotLocationIntrinsic))]
    [XmlIncludeAttribute(typeof(SpotLocationCoordinate))]
    [XmlIncludeAttribute(typeof(LinearLocation))]
    [XmlIncludeAttribute(typeof(LinearLocationCoordinate))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("baseLocation", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public abstract partial class BaseLocation : BaseObject
    {
    }
    
    /// <summary>
    /// a "topological box"
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("areaLocation", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class AreaLocation : BaseLocation
    {
        #region Private fields
        private AssociatedNetElement[] _associatedNetElements;
        #endregion
        
        /// <summary>
        /// An area location is composed of a set of associated net elements.
        /// </summary>
        [XmlElement("associatedNetElements", Order=0)]
        public AssociatedNetElement[] associatedNetElements
        {
            get
            {
                return _associatedNetElements;
            }
            set
            {
                _associatedNetElements = value;
            }
        }
    }
    
    [XmlIncludeAttribute(typeof(AssociatedNetElementIntrinsic))]
    [XmlIncludeAttribute(typeof(AssociatedNetElementCoordinate))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("associatedNetElement", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public abstract partial class AssociatedNetElement
    {
        #region Private fields
        private ApplicationDirection _appliesInDirection;
        private LateralSide _isLocatedToSide;
        private tElementWithIDref _netElement;
        #endregion
        
        /// <summary>
        /// indicates the direction in which the object along this linear location is valid, i.e. the function of the (curvi-)linear object applies in the given direction.
        /// </summary>
        [XmlElement(Order=0)]
        public ApplicationDirection appliesInDirection
        {
            get
            {
                return _appliesInDirection;
            }
            set
            {
                _appliesInDirection = value;
            }
        }
        
        /// <summary>
        /// With respect to the linear element, the entity is located to this side.
        /// </summary>
        [XmlElement(Order=1)]
        public LateralSide isLocatedToSide
        {
            get
            {
                return _isLocatedToSide;
            }
            set
            {
                _isLocatedToSide = value;
            }
        }
        
        /// <summary>
        /// Refers to the net element that carries the location
        /// </summary>
        [XmlElement(Order=2)]
        public tElementWithIDref netElement
        {
            get
            {
                if ((_netElement == null))
                {
                    _netElement = new tElementWithIDref();
                }
                return _netElement;
            }
            set
            {
                _netElement = value;
            }
        }
    }
    
    /// <summary>
    /// Provides orientation to the spot location by defining the direction in which the net entity at this location applies. This direction is given with respect to the associated linear element.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    public enum ApplicationDirection
    {
        /// <summary>
        /// The application direction is irrelevant or (yet) unknown.
        /// </summary>
        undefined,
        /// <summary>
        /// the located object is valid in the direction of the LinearElement
        /// </summary>
        normal,
        /// <summary>
        /// the located object is valid in the reverse direction of the LinearElement.
        /// </summary>
        reverse,
        /// <summary>
        /// The located object is valid in both directions.
        /// </summary>
        both,
    }
    
    /// <summary>
    /// Informs whether the linear location or spot location is situated to the left, right or centre of the associated LinearElement. Left/right is given with respect to the "intrinsic" orientation of the LinearElement (extremity 0 to extremity 1).
    /// 
    /// LateralSide is therefore independent from ApplicationDirection.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    public enum LateralSide
    {
        /// <summary>
        /// The lateral side is not yet defined/known although the spot located object is or will be placed to the left or right of the track. Can be used at early planning stages. The actual lateral side can then be given at a later stage, e.g. as-built.
        /// </summary>
        undefined,
        left,
        right,
        /// <summary>
        /// Centred on the linear element.
        /// </summary>
        centre,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("associatedNetElementIntrinsic", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class AssociatedNetElementIntrinsic : AssociatedNetElement
    {
        #region Private fields
        private double _intrinsicCoordValues;
        #endregion
        
        /// <summary>
        /// the intrinsic coordinate of the two extremities. The order does not inform about orientation.
        /// </summary>
        [XmlAttribute]
        public double intrinsicCoordValues
        {
            get
            {
                return _intrinsicCoordValues;
            }
            set
            {
                _intrinsicCoordValues = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("associatedNetElementCoordinate", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class AssociatedNetElementCoordinate : AssociatedNetElement
    {
        #region Private fields
        private tElementWithIDref[] _extremities;
        #endregion
        
        /// <summary>
        /// the extremities of the associated linear element given as coordinate(s) in a given coordinate reference system.
        /// </summary>
        [XmlElement("extremities", Order=0)]
        public tElementWithIDref[] extremities
        {
            get
            {
                return _extremities;
            }
            set
            {
                _extremities = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("timedLocation", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class TimedLocation : BaseLocation
    {
    }
    
    /// <summary>
    /// Defines point location information for a LocatedNetentity instance.
    /// </summary>
    [XmlIncludeAttribute(typeof(SpotLocationIntrinsic))]
    [XmlIncludeAttribute(typeof(SpotLocationCoordinate))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("spotLocation", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public abstract partial class SpotLocation : BaseLocation
    {
        #region Private fields
        private ApplicationDirection _appliesInDirection;
        private LateralSide _isLocatedToSide;
        private tElementWithIDref _netElement;
        #endregion
        
        /// <summary>
        /// Indicates the direction in which the object at this spot location is valid, i.e. the direction in which the function of the object applies.
        /// </summary>
        [XmlElement(Order=0)]
        public ApplicationDirection appliesInDirection
        {
            get
            {
                return _appliesInDirection;
            }
            set
            {
                _appliesInDirection = value;
            }
        }
        
        /// <summary>
        /// With respect to the linear element, the location is located to this side. Not given if irrelevant.
        /// </summary>
        [XmlElement(Order=1)]
        public LateralSide isLocatedToSide
        {
            get
            {
                return _isLocatedToSide;
            }
            set
            {
                _isLocatedToSide = value;
            }
        }
        
        /// <summary>
        /// The spot location is attached to this net element
        /// </summary>
        [XmlElement(Order=2)]
        public tElementWithIDref netElement
        {
            get
            {
                if ((_netElement == null))
                {
                    _netElement = new tElementWithIDref();
                }
                return _netElement;
            }
            set
            {
                _netElement = value;
            }
        }
    }
    
    /// <summary>
    /// Locates a spot in space using a relative abscissa, i.e. a
    /// fraction (percentage) of distance along the linear element.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("spotLocationIntrinsic", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class SpotLocationIntrinsic : SpotLocation
    {
        #region Private fields
        private double _intrinsicCoord;
        #endregion
        
        /// <summary>
        /// The location on the associated NetElement in the range 0 (start) to 1 (end of NetElement)
        /// </summary>
        [XmlAttribute]
        public double intrinsicCoord
        {
            get
            {
                return _intrinsicCoord;
            }
            set
            {
                _intrinsicCoord = value;
            }
        }
    }
    
    /// <summary>
    /// Locates a spot in a given coordinate system.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("spotLocationCoordinate", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class SpotLocationCoordinate : SpotLocation
    {
        #region Private fields
        private tElementWithIDref _coordinate;
        #endregion
        
        /// <summary>
        /// Has a coordinate in a given coordinate reference system.
        /// </summary>
        [XmlElement(Order=0)]
        public tElementWithIDref coordinate
        {
            get
            {
                if ((_coordinate == null))
                {
                    _coordinate = new tElementWithIDref();
                }
                return _coordinate;
            }
            set
            {
                _coordinate = value;
            }
        }
    }
    
    /// <summary>
    /// Defines location information with a startpoint and an endpoint. Refers to an ordered set of one or more PositioningNetElement instances.
    /// </summary>
    [XmlIncludeAttribute(typeof(LinearLocationCoordinate))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("linearLocation", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class LinearLocation : BaseLocation
    {
        #region Private fields
        private AssociatedNetElement[] _associatedElements;
        #endregion
        
        /// <summary>
        /// A linear location is linked to one or more associated net elements that carry it in topological sense.
        /// </summary>
        [XmlElement("associatedElements", Order=0)]
        public AssociatedNetElement[] associatedElements
        {
            get
            {
                return _associatedElements;
            }
            set
            {
                _associatedElements = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("linearLocationCoordinate", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class LinearLocationCoordinate : LinearLocation
    {
        #region Private fields
        private tElementWithIDref[] _coordinates;
        #endregion
        
        /// <summary>
        /// Reference to on or more coordinates that conveys the position in a given coordinate reference system.
        /// </summary>
        [XmlElement("coordinates", Order=0)]
        public tElementWithIDref[] coordinates
        {
            get
            {
                return _coordinates;
            }
            set
            {
                _coordinates = value;
            }
        }
    }
    
    /// <summary>
    /// An instance of “Network” can be considered as a set of description levels (“LevelNetwork”) and a set of “NetworkResource” instances.
    /// 
    /// A "Network" is described in at least one "LevelNetwork". A "Network" may be described in more than one "LevelNetwork", typically for different levels of detail.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("network", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class Network : NamedResource
    {
        #region Private fields
        private tElementWithIDref[] _levels;
        private tElementWithIDref[] _networkResources;
        #endregion
        
        [XmlElement("levels", Order=0)]
        public tElementWithIDref[] levels
        {
            get
            {
                return _levels;
            }
            set
            {
                _levels = value;
            }
        }
        
        /// <summary>
        /// Reference to the resources that constitute the network.
        /// </summary>
        [XmlElement("networkResources", Order=1)]
        public tElementWithIDref[] networkResources
        {
            get
            {
                return _networkResources;
            }
            set
            {
                _networkResources = value;
            }
        }
    }
    
    /// <summary>
    /// Abstraction of w3c sosa:observation. Needed for the purpose of dealing with specified values (de:Sollwert) and observed values (de:Istwert) on symmetric terms.
    /// </summary>
    [XmlIncludeAttribute(typeof(Observation))]
    [XmlIncludeAttribute(typeof(Specification))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("informationSource", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public abstract partial class InformationSource : NamedResource
    {
        #region Private fields
        private tElementWithIDref[] _featureOfInterest;
        private tElementWithIDref _observedProperty;
        #endregion
        
        [XmlElement("featureOfInterest", Order=0)]
        public tElementWithIDref[] featureOfInterest
        {
            get
            {
                return _featureOfInterest;
            }
            set
            {
                _featureOfInterest = value;
            }
        }
        
        [XmlElement(Order=1)]
        public tElementWithIDref observedProperty
        {
            get
            {
                if ((_observedProperty == null))
                {
                    _observedProperty = new tElementWithIDref();
                }
                return _observedProperty;
            }
            set
            {
                _observedProperty = value;
            }
        }
    }
    
    /// <summary>
    /// As per ISO 19156(2011) :
    /// <b>observation </b>= act of measuring or otherwise determining the value of a property
    /// <b>property </b>= facet or attribute of an object referenced by a name
    /// 
    /// Here, "Observation" implements the w3c sosa:Observation class.
    /// The latter inherits directly from Class ; in the context of RTM, we let it inherit from NamedResource.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("observation", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class Observation : InformationSource
    {
        #region Private fields
        private tElementWithIDref[] _circumstance;
        private Result[] _hasResult;
        private tElementWithIDref _madeBySensor;
        private TimeValue _resultTime;
        private string _simpleResult;
        #endregion
        
        [XmlElement("circumstance", Order=0)]
        public tElementWithIDref[] circumstance
        {
            get
            {
                return _circumstance;
            }
            set
            {
                _circumstance = value;
            }
        }
        
        /// <summary>
        /// The observation has an ordered list of results.
        /// </summary>
        [XmlElement("hasResult", Order=1)]
        public Result[] hasResult
        {
            get
            {
                return _hasResult;
            }
            set
            {
                _hasResult = value;
            }
        }
        
        /// <summary>
        /// The observation is acquired by a sensor.
        /// </summary>
        [XmlElement(Order=2)]
        public tElementWithIDref madeBySensor
        {
            get
            {
                if ((_madeBySensor == null))
                {
                    _madeBySensor = new tElementWithIDref();
                }
                return _madeBySensor;
            }
            set
            {
                _madeBySensor = value;
            }
        }
        
        /// <summary>
        /// Timestamp when the simple result was registered.
        /// </summary>
        [XmlElement(Order=3)]
        public TimeValue resultTime
        {
            get
            {
                if ((_resultTime == null))
                {
                    _resultTime = new TimeValue();
                }
                return _resultTime;
            }
            set
            {
                _resultTime = value;
            }
        }
        
        /// <summary>
        /// Raw reading of a sensor or measurement device
        /// </summary>
        [XmlAttribute]
        public string simpleResult
        {
            get
            {
                return _simpleResult;
            }
            set
            {
                _simpleResult = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("specification", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public abstract partial class Specification : InformationSource
    {
    }
    
    /// <summary>
    /// Class holding the definition of a geometrical element in 3-D space, as a set of equations, possibly involving up to six coordinates (e.g. x, y, z, rho, theta, phi).
    /// 
    /// The class holds a reference to the coordinate reference system in which the equations are expressed.
    /// 
    /// The class also holds a reference to a linear location on the network.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("threeDAlignmentCurve", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class ThreeDAlignmentCurve : BaseObject
    {
        #region Private fields
        private tElementWithIDref _hasCoordinateReferenceSystem;
        private LinearLocation _hasLinearLocation;
        #endregion
        
        [XmlElement(Order=0)]
        public tElementWithIDref hasCoordinateReferenceSystem
        {
            get
            {
                if ((_hasCoordinateReferenceSystem == null))
                {
                    _hasCoordinateReferenceSystem = new tElementWithIDref();
                }
                return _hasCoordinateReferenceSystem;
            }
            set
            {
                _hasCoordinateReferenceSystem = value;
            }
        }
        
        [XmlElement(Order=1)]
        public LinearLocation hasLinearLocation
        {
            get
            {
                if ((_hasLinearLocation == null))
                {
                    _hasLinearLocation = new LinearLocation();
                }
                return _hasLinearLocation;
            }
            set
            {
                _hasLinearLocation = value;
            }
        }
    }
    
    /// <summary>
    /// Abstract class representing any kind of horizontal alignment segment.
    /// Geometric segments are used to define the horizontal alignment. The segments are ordered. Each horizontal segment is defined with:
    /// <ul>
    /// <li>a starting point known by its cartesian coordinates</li>
    /// <li>the starting direction in form of an azimuth [gon] or alternatively [rad](radiant).</li>
    /// <li>the segment length in [m]</li>
    /// <li>the information on how the segment is connected to the following segment. This information is used to describe possible discontinuities (e.g. if there is a horizontal bend).</li>
    /// </ul>
    /// 
    /// Additionally:
    /// <ul>
    /// <li>a radius, for arc segments</li>
    /// <li>an initial and final radius for transition segments as well as the type of transition curve. Some transition curves require additional parameters.</li>
    /// </ul>
    /// </summary>
    [XmlIncludeAttribute(typeof(HorizontalSegmentLine))]
    [XmlIncludeAttribute(typeof(HorizontalSegmentTransition))]
    [XmlIncludeAttribute(typeof(HorizontalSegmentArc))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("horizontalAlignmentSegment", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public abstract partial class HorizontalAlignmentSegment : BaseObject
    {
        #region Private fields
        private LinearLocation _hasLinearLocation;
        #endregion
        
        [XmlElement(Order=0)]
        public LinearLocation HasLinearLocation
        {
            get
            {
                if ((_hasLinearLocation == null))
                {
                    _hasLinearLocation = new LinearLocation();
                }
                return _hasLinearLocation;
            }
            set
            {
                _hasLinearLocation = value;
            }
        }
    }
    
    /// <summary>
    /// Geometric primitive. All required attributes are defined in the class "HorizontalAlignmentSegment".
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("horizontalSegmentLine", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class HorizontalSegmentLine : HorizontalAlignmentSegment
    {
    }
    
    /// <summary>
    /// Geometric primitive for transition curves.
    /// All the attributes except the type of transition curve and initial and final radius are defined in the class "HorizontalAlignmentSegment".
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("horizontalSegmentTransition", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class HorizontalSegmentTransition : HorizontalAlignmentSegment
    {
    }
    
    /// <summary>
    /// Geometric primitive for Arc of circle.
    /// All Attributes except the radius are defined in the class "HorizontalAlignmentSegment".
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("horizontalSegmentArc", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class HorizontalSegmentArc : HorizontalAlignmentSegment
    {
    }
    
    /// <summary>
    /// A set of points that can be spot-located. Typically the product of a position sampling process such as a land survey, photogrammetry, a measurement campaign with satellite receivers or a mix of these.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("discretisedPointSet", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class DiscretisedPointSet : BaseObject
    {
        #region Private fields
        private DiscretisedPoint[] _isDescribedWithPoints;
        private tElementWithIDref[] _isSubsetOf;
        #endregion
        
        [XmlElement("isDescribedWithPoints", Order=0)]
        public DiscretisedPoint[] isDescribedWithPoints
        {
            get
            {
                return _isDescribedWithPoints;
            }
            set
            {
                _isDescribedWithPoints = value;
            }
        }
        
        /// <summary>
        /// allows defining a subset of discretised points.
        /// </summary>
        [XmlElement("isSubsetOf", Order=1)]
        public tElementWithIDref[] isSubsetOf
        {
            get
            {
                return _isSubsetOf;
            }
            set
            {
                _isSubsetOf = value;
            }
        }
    }
    
    /// <summary>
    /// A geometric point that is a sample of a discretized point set. The class can inform about the sampling process that produced this point. Role "location" points to a SpotLocation, which is the abstraction for "point in space". This allows to document the location in one or more reference system(s).
    /// </summary>
    [XmlIncludeAttribute(typeof(RailwayDiscretisedPoint))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("discretisedPoint", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class DiscretisedPoint
    {
        #region Private fields
        private SpotLocation _hasSpotLocation;
        #endregion
        
        [XmlElement(Order=0)]
        public SpotLocation hasSpotLocation
        {
            get
            {
                return _hasSpotLocation;
            }
            set
            {
                _hasSpotLocation = value;
            }
        }
    }
    
    /// <summary>
    /// A geometric point that is a sample of a railway alignment.
    /// Can bear geometric attributes such as locally measured cant values, etc.
    /// More generally, geometric properties that cannot be represented by SpotLocation (which is the abstraction of a "point in space"), such as twist or the rotation of some local coordinate system, shall be described here.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("railwayDiscretisedPoint", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class RailwayDiscretisedPoint : DiscretisedPoint
    {
    }
    
    /// <summary>
    /// Geometric segments are used to define the railway cant. The segments are ordered. Each cant segment is defined with:
    /// <ul>
    /// <li>a starting point known by its distance along the horizontal alignment [m] </li>
    /// <li>the segment length in [m] </li>
    /// <li>the start cant value in [mm] </li>
    /// <li>the end cant value in [mm] </li>
    /// <li>the information on how the segment is connected to the following segment. This information is used to describe possible discontinuities (e.g. invalid sudden change of cant or missing cant information if end point and starting point differ over a threshold).</li>
    /// </ul>
    /// 
    /// Additionally:<ul>
    /// <li>an information which describes if a smoothing was applied between two cant segments</li>
    /// </ul>
    /// </summary>
    [XmlIncludeAttribute(typeof(SegmentCantTransition))]
    [XmlIncludeAttribute(typeof(SegmentCantLine))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("alignmentCantSegment", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public abstract partial class AlignmentCantSegment : BaseObject
    {
        #region Private fields
        private LinearLocation _hasLinearLocation;
        #endregion
        
        [XmlElement(Order=0)]
        public LinearLocation hasLinearLocation
        {
            get
            {
                if ((_hasLinearLocation == null))
                {
                    _hasLinearLocation = new LinearLocation();
                }
                return _hasLinearLocation;
            }
            set
            {
                _hasLinearLocation = value;
            }
        }
    }
    
    /// <summary>
    /// Geometric primitive for transition curves.
    /// All the attributes except the type of transition curve and initial and final radius are defined in the class "AlignmentCantSegment".
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("segmentCantTransition", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class SegmentCantTransition : AlignmentCantSegment
    {
    }
    
    /// <summary>
    /// Geometric primitive. All needed attributes are defined in the class "AlignmentCantSegment".
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("segmentCantLine", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class SegmentCantLine : AlignmentCantSegment
    {
    }
    
    /// <summary>
    /// Abstract class representing any kind of vertical alignment segment.
    /// Geometric segments are used to define the vertical alignment. The segments are ordered. Each vertical segment is defined with:
    /// <ul>
    /// <li>a starting point known by its distance along the horizontal alignment [m]</li>
    /// <li>the starting point elevation in [m]</li>
    /// <li>the starting direction as a gradient [‰]</li>
    /// <li>the segment length in [m]</li>
    /// <li>the information on how the segment is connected to the following segment. This information is used to describe possible discontinuities (e.g. if there is a vertical bend).</li>
    /// </ul>
    /// 
    /// Additionally:
    /// <ul>
    /// <li>a radius, for arc segments [m]</li>
    /// <li>the initial and final radius for transition segments as well as the type of transition curve. Some transition curves require additional parameters.</li>
    /// </ul>
    /// 
    /// The elevation (= Cartesian Z-coordinate) of the starting point, the segment length and the starting gradient are defined for each geometric element.
    /// </summary>
    [XmlIncludeAttribute(typeof(VerticalSegmentLine))]
    [XmlIncludeAttribute(typeof(VerticalSegmentArc))]
    [XmlIncludeAttribute(typeof(VerticalSegmentTransition))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("verticalAlignmentSegment", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public abstract partial class VerticalAlignmentSegment : BaseObject
    {
        #region Private fields
        private LinearLocation _hasLinearLocation;
        #endregion
        
        [XmlElement(Order=0)]
        public LinearLocation HasLinearLocation
        {
            get
            {
                if ((_hasLinearLocation == null))
                {
                    _hasLinearLocation = new LinearLocation();
                }
                return _hasLinearLocation;
            }
            set
            {
                _hasLinearLocation = value;
            }
        }
    }
    
    /// <summary>
    /// Geometric primitive. All required attributes are defined in the class "Vertical AlignmentSegment".
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("verticalSegmentLine", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class VerticalSegmentLine : VerticalAlignmentSegment
    {
    }
    
    /// <summary>
    /// Geometric primitive for Arc of circle.
    /// All Attributes except the radius are defined in the class "VerticalAlignmentSegment".
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("verticalSegmentArc", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class VerticalSegmentArc : VerticalAlignmentSegment
    {
    }
    
    /// <summary>
    /// Geometric primitive for transition curves.
    /// All the attributes except the type of transition curve and initial and final radius are defined in the class "VerticalAlignmentSegment".
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("verticalSegmentTransition", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class VerticalSegmentTransition : VerticalAlignmentSegment
    {
    }
    
    /// <summary>
    /// Class "AlignmentCurve" provides the most used description of railway alignment curves in space, which is by projections. The horizontal projection "HorizontalAlignment" is broken down into a set of segments, each segment having definite geometric characteristics.
    /// 
    /// The same applies to "VerticalAlignment", that may however be missing (hence the 0..1 multiplicity) at early project stages..
    /// 
    /// Segment boundaries, for vertical and horizontal alignment, do not necessarily coincide.
    /// 
    /// Finally, lateral inclination provides a way to describe the twist or cant applied to a track (specialized class "RailwayAlignmentCant") or, more generally, to the trackbed, bridge deck, or similar.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("alignmentCurve", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class AlignmentCurve : BaseObject
    {
        #region Private fields
        private tElementWithIDref[] _hasHorizontalAlignment;
        private LateralInclination _hasLateralInclination;
        private tElementWithIDref[] _hasVerticalAlignment;
        #endregion
        
        [XmlArrayAttribute(Order=0)]
        [XmlArrayItemAttribute("isStructuredIn", IsNullable=false)]
        public tElementWithIDref[] hasHorizontalAlignment
        {
            get
            {
                return _hasHorizontalAlignment;
            }
            set
            {
                _hasHorizontalAlignment = value;
            }
        }
        
        [XmlElement(Order=1)]
        public LateralInclination hasLateralInclination
        {
            get
            {
                if ((_hasLateralInclination == null))
                {
                    _hasLateralInclination = new LateralInclination();
                }
                return _hasLateralInclination;
            }
            set
            {
                _hasLateralInclination = value;
            }
        }
        
        [XmlArrayAttribute(Order=2)]
        [XmlArrayItemAttribute("isStructuredIn", IsNullable=false)]
        public tElementWithIDref[] hasVerticalAlignment
        {
            get
            {
                return _hasVerticalAlignment;
            }
            set
            {
                _hasVerticalAlignment = value;
            }
        }
    }
    
    /// <summary>
    /// The lateral inclination is a generic class serving as a reference for the description of any kind of inclination related to an alignment curve i.e.  for describing cross sections for road or cant for railways. So lateral inclination is independent from the usage i.e. road or rail.
    /// For the purpose of railway the spezialized class RailwayAlignmentCant will be used.
    /// </summary>
    [XmlIncludeAttribute(typeof(RailwayAlignmentCant))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("lateralInclination", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class LateralInclination
    {
    }
    
    /// <summary>
    /// The railway cant alignment is composed of geometric segments with the two following geometry types
    /// <ul>
    /// <li>Straight line for constant cant or constant change of cant </li>
    /// <li>Transition curve for curved cant</li>
    /// </ul>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("railwayAlignmentCant", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class RailwayAlignmentCant : LateralInclination
    {
        #region Private fields
        private tElementWithIDref[] _isStructuredIn;
        #endregion
        
        [XmlElement("isStructuredIn", Order=0)]
        public tElementWithIDref[] isStructuredIn
        {
            get
            {
                return _isStructuredIn;
            }
            set
            {
                _isStructuredIn = value;
            }
        }
    }
    
    /// <summary>
    /// LevelNetwork depicts a specific description level and defines a consistent "view" of a Network at a certain level of granularity. An instance of this class therefore includes all resources that are required to define the corresponding level (e.g. micro/track, or macro/line).
    /// The concept of description level is central to the goal of computational efficiency.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("networkLevel", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class NetworkLevel : BaseObject
    {
        #region Private fields
        private DescriptionLevel _hasDescriptionLevel;
        private tElementWithIDref[] _networkResources;
        #endregion
        
        [XmlElement(Order=0)]
        public DescriptionLevel hasDescriptionLevel
        {
            get
            {
                return _hasDescriptionLevel;
            }
            set
            {
                _hasDescriptionLevel = value;
            }
        }
        
        [XmlElement("networkResources", Order=1)]
        public tElementWithIDref[] networkResources
        {
            get
            {
                return _networkResources;
            }
            set
            {
                _networkResources = value;
            }
        }
    }
    
    /// <summary>
    /// A closed set of description levels.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    public enum DescriptionLevel
    {
        /// <summary>
        /// The Macro level aims to describe the network at regional or national level, with the nonlinear elements being the boundaries and the major OP’s, while the linear elements are the sections of lines connecting those points.
        /// </summary>
        Macro,
        /// <summary>
        /// The Meso level brings the description of the tracks between the operational points of the network into focus.
        /// The non-linear elements are the Operating Points (OP = stations, yards, junctions, boundaries), and linear elements are the tracks connecting Ops.
        /// </summary>
        Meso,
        /// <summary>
        /// At micro level, the smallest details aggregate into a single item. E.g. individual point components and point blades and tips coalesce into a single turnout.
        /// </summary>
        Micro,
        /// <summary>
        /// The nano level could be described as a properly attributed surveyors map, including topological properties of the rail network in the finest possible granularity.
        /// Use cases for the Nano level would include interlocking and asset management.
        /// </summary>
        Nano,
    }
    
    /// <summary>
    /// An unordered collection has no specific begin and end.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("unorderedCollection", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class UnorderedCollection : ElementPartCollection
    {
        #region Private fields
        private tElementWithIDref[] _elementParts;
        #endregion
        
        /// <summary>
        /// an unordered set of NetElements that are part of the higher level.
        /// </summary>
        [XmlElement("elementParts", Order=0)]
        public tElementWithIDref[] elementParts
        {
            get
            {
                return _elementParts;
            }
            set
            {
                _elementParts = value;
            }
        }
    }
    
    /// <summary>
    /// Ordered collection of NetElements.
    /// Elements are ordered inside the collection via the role elementParts.
    /// Moreover, the user may define several ordered collections and decide to order the ordered collections themselves, using the "sequence" attribute.
    /// 
    /// <i>Suggested use case: starting from a micro-level description of a dense area, create CompositionNetElements representing all possible paths (disjoint or overlapping). Each path is an OrderedCollection and points to an ordered list of NetElements. NetElements can be shared by several paths. Paths can be ordered (using the sequence attribute), where the meaning of the order is left to the user. The order may be absolute (all 'sequence' values are distinct) or relative (two OrderedCollections may bear the same 'sequence' attribute).</i>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("orderedCollection", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class OrderedCollection : ElementPartCollection
    {
        #region Private fields
        private tElementWithIDref[] _elementParts;
        private int _sequence;
        #endregion
        
        /// <summary>
        /// an ordered set of NetElements that are part of the higher level.
        /// </summary>
        [XmlElement("elementParts", Order=0)]
        public tElementWithIDref[] elementParts
        {
            get
            {
                return _elementParts;
            }
            set
            {
                _elementParts = value;
            }
        }
        
        [XmlElement(Order=1)]
        public int sequence
        {
            get
            {
                return _sequence;
            }
            set
            {
                _sequence = value;
            }
        }
    }
    
    /// <summary>
    /// A (physical) instant that can be associated with different time values from different time reference systems.
    /// (informative)
    /// An example (instance) is "instant of tripping of circuit breaker X of locomotive Y". the instant is an instance of (Physical) Instant. The circuit breaker tripping provides the context, hence the physical meaning.
    /// The time equivalent of "SpotLocation", except that a PhysicalInstant must have an owner (here, the locomotive or the circuit breaker).
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("instant", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class Instant
    {
        #region Private fields
        private TimeValue[] _atTime;
        #endregion
        
        [XmlElement("atTime", Order=0)]
        public TimeValue[] atTime
        {
            get
            {
                return _atTime;
            }
            set
            {
                _atTime = value;
            }
        }
    }
    
    /// <summary>
    /// It is strongly recommended for implementations of new systems to use the UUID type definition. If this is not possible a parallel ID of type UUID should be implemented to allow for global compatibility.
    /// </summary>
    [XmlIncludeAttribute(typeof(UUID))]
    [XmlIncludeAttribute(typeof(LegacyID))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute(Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public abstract partial class tID
    {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("uUID", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class UUID : tID
    {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("legacyID", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class LegacyID : tID
    {
        #region Private fields
        private string _id;
        #endregion
        
        [XmlElement(Order=0)]
        public string id
        {
            get
            {
                return _id;
            }
            set
            {
                _id = value;
            }
        }
    }
    
    /// <summary>
    /// The horizontal alignment is composed of a set of ordered horizontal alignment segments. Each  segment can be of one of the following three geometry types:
    /// <ul>
    /// <li>straight line</li>
    /// <li>arc of a circle</li>
    /// <li>transition curve</li>
    /// </ul>
    /// 
    /// The horizontal alignment delivers the metric for the linear reference system used to position the vertical alignment segments and the cant segments.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("horizontalAlignment", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class HorizontalAlignment
    {
        #region Private fields
        private tElementWithIDref[] _isStructuredIn;
        #endregion
        
        [XmlElement("isStructuredIn", Order=0)]
        public tElementWithIDref[] isStructuredIn
        {
            get
            {
                return _isStructuredIn;
            }
            set
            {
                _isStructuredIn = value;
            }
        }
    }
    
    /// <summary>
    /// Abstract class for time intervals.
    /// (informative)
    /// Time intervals bear no IDs, as they are expected to be managed by other objects, such as "TimeTable" or "NetElement" (describing the interval of validity: former validFrom... validTo)
    /// May include basic methods such as:
    /// isIncluded(instant:DateTime): boolean ;
    /// intersection(interval:TimeInterval): TimeInterval, etc.
    /// </summary>
    [XmlIncludeAttribute(typeof(SimpleTimeInterval))]
    [XmlIncludeAttribute(typeof(ValidityPeriod))]
    [XmlIncludeAttribute(typeof(CompositeTimeInterval))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("timeInterval", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public abstract partial class TimeInterval
    {
    }
    
    /// <summary>
    /// Simple, i.e. continuous time interval between start and end.
    /// Start and end instants can be included or excluded.
    /// (informative)
    /// Start excluded is useful for computing statements such as "takes place after", etc.
    /// </summary>
    [XmlIncludeAttribute(typeof(ValidityPeriod))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("simpleTimeInterval", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class SimpleTimeInterval : TimeInterval
    {
        #region Private fields
        private TimeValue[] _end;
        private TimeValue[] _start;
        private bool _endIncluded;
        private bool _startIncluded;
        #endregion
        
        [XmlElement("end", Order=0)]
        public TimeValue[] end
        {
            get
            {
                return _end;
            }
            set
            {
                _end = value;
            }
        }
        
        [XmlElement("start", Order=1)]
        public TimeValue[] start
        {
            get
            {
                return _start;
            }
            set
            {
                _start = value;
            }
        }
        
        [XmlAttribute]
        public bool endIncluded
        {
            get
            {
                return _endIncluded;
            }
            set
            {
                _endIncluded = value;
            }
        }
        
        [XmlAttribute]
        public bool startIncluded
        {
            get
            {
                return _startIncluded;
            }
            set
            {
                _startIncluded = value;
            }
        }
    }
    
    /// <summary>
    /// Simple time interval, used for defining the time frame in which a functional object is available in the field (from placing into service to de-commissioning). By extension, also used for setting the time frame in which e.g. a regulation or reference system is in force.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("validityPeriod", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class ValidityPeriod : SimpleTimeInterval
    {
    }
    
    /// <summary>
    /// Composite intervals contain at least one interval, to which further intervals can be added or subtracted (in a set-theoretical sense).
    /// (informative)
    /// The combination of additions and subtractions will result in a sequence of disjoint, simple intervals; the resulting sequence may be a derived, persisted property, in practical applications. It is not materialized here.
    /// In any operation (e.g. to check if an instant is in a composite interval), all additions shall be done first before subtractions take place.
    /// Generating periodic intervals (such as "all weekdays between Jan 1, 2018 and Dec 31, 2019") is best done using a factory pattern, not included here.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="http://www.railtopomodel.org/schemas/Common")]
    [XmlRootAttribute("compositeTimeInterval", Namespace="http://www.railtopomodel.org/schemas/Common", IsNullable=false)]
    public partial class CompositeTimeInterval : TimeInterval
    {
        #region Private fields
        private TimeInterval[] _added;
        private TimeInterval[] _subtracted;
        #endregion
        
        [XmlElement("added", Order=0)]
        public TimeInterval[] added
        {
            get
            {
                return _added;
            }
            set
            {
                _added = value;
            }
        }
        
        [XmlElement("subtracted", Order=1)]
        public TimeInterval[] subtracted
        {
            get
            {
                return _subtracted;
            }
            set
            {
                _subtracted = value;
            }
        }
    }
}
#pragma warning restore
